package heap;

import java.util.PriorityQueue;

public class MaxHeap {

    private int[] array;
    private int size;

    public MaxHeap() {
        //con 16 sirve insert
        //con 1002 sirve sort
        //tenia 13
        this.array = new int[1002];
        this.size = 0;
    }

    public int[] getArray() {
        return array;
    }

    public void setArray(int[] array) {
        this.array = array;
    }

    public int getSize() {
        return size;
    }

    public void setSize(int size) {
        this.size = size;

    }

    private int parent(int index) {
        return index / 2;
    }

    private int leftChild(int index) {
        return 2 * index;
    }

    private int rightChild(int index) {
        return 2 * index + 1;
    }

    public void buildHeap(int[] a) {
    }

    public void insert(int value) {
        size++;
        array[size] = value;
        siftUp(size);
    }

    public void siftDown(int i) {
        int maxIndex = i;
        int l = leftChild(i);
       
                
        if (l <= size && array[l] > array[maxIndex]) {
            maxIndex = l;
        }
        int r = rightChild(i);
        if (r <= size && array[r] > array[maxIndex]) {
            maxIndex = r;
        }
        if (i != maxIndex) {
            swap(i, maxIndex);
            siftDown(maxIndex);
        }
        for (int j = 0; j < array.length; j++) {
            System.out.println("v: "+ this.getArray()[j]);
            
        }
    }

    public void siftUp(int i) {
        while (i > 1 && array[parent(i)] < array[i]) {
            swap(parent(i), i);
            i = parent(i);
        }
    }

    private void swap(int fpos, int spos) {
        int tmp;
        tmp = array[fpos];
        array[fpos] = array[spos];
        array[spos] = tmp;
    }

    public int extractMax() {
        int result = array[1];
        array[1] = array[size];
        size--;
        siftDown(1);
        return result;
    }

    public void sort(int[] arr) {
        //Para que salga
        int n=arr.length;
        for (int i = 0; i < n; i++) {
            this.insert(arr[i]);
            //System.out.println("entro: "+ arr[i]);
        }
        //System.out.println("VALOR DE n: "+n);
        //System.out.println("DEBERIA SALIR EN ORDEN");
        for (int i = n-1; i > 0; i--) {
           // System.out.println("Valor de i: "+i);
            int a=this.extractMax();
            //System.out.println("salio: "+a);
            arr[i]=a;
        }
        
    }

}
